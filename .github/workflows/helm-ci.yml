name: Helm CI

on:
  workflow_call:
    inputs:
      chart_path:
        type: string
        required: false
        default: charts
      chart_name:
        type: string
        required: false
      app_version:
        type: string
        required: false
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
    outputs:
      chart_name:
        value: ${{ jobs.release.outputs.chart_name }}
      chart_version:
        value: ${{ jobs.release.outputs.chart_version }}

env:
  CHART_NAME: ${{ inputs.chart_name != '' || github.event.repository.name }}

jobs:
  release:
    name: Release
    runs-on: 
      - self-hosted
      - live
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up .NET cli
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
        env:
          DOTNET_INSTALL_DIR: tools/dotnet

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ vars.HELM_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ vars.HELM_REGISTRY_REGION }}
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Dependency Update
        working-directory: ${{ inputs.chart_path }}
        run: helm dep up $CHART_NAME

      - name: Lint
        working-directory: ${{ inputs.chart_path }}
        run: helm lint --strict $CHART_NAME

      - name: Release
        id: release
        working-directory: ${{ format('{0}/{1}', inputs.chart_path, env.CHART_NAME) }}
        run: |
          if [[ ${{ github.ref_name }} == ${{ github.event.repository.default_branch }} ]]; then
            git pull
          fi

          export APP_VERSION=${{ inputs.app_version }}

          if [[ -n $APP_VERSION ]]; then
            export APP_VERSION=${{ inputs.app_version }}
            yq -i '.appVersion = env(APP_VERSION)' Chart.yaml
          fi

          if [[ ${{ github.event_name }} == pull_request ]]; then
            export VERSION=${{ steps.gitversion.outputs.MajorMinorPatch }}-${{ github.event.pull_request.number }}.${{ steps.gitversion.outputs.PreReleaseNumber }}
          else
            export VERSION=${{ steps.gitversion.outputs.semVer }}
          fi

          yq -i '.version = env(VERSION)' Chart.yaml

          helm package . -u

          helm push ${CHART_NAME}-${VERSION}.tgz oci://${{ steps.login_ecr.outputs.registry }}/helm-charts

          if [[ ${{ github.ref_name }} == ${{ github.event.repository.default_branch }} ]]; then
            git config user.email "actions@clickbus.com"
            git config user.name "GitHub Actions"
            git add Chart.yaml
            git commit -m "chore: release helm charts $CHART_VERSION [skip ci]" || echo "nothing to commit, proceed"
            git push
          fi

          echo chart_name=$CHART_NAME >> $GITHUB_OUTPUT
          echo chart_version=$VERSION >> $GITHUB_OUTPUT
    outputs:
      chart_name: ${{ steps.release.outputs.chart_name }}
      chart_version: ${{ steps.release.outputs.chart_version }}