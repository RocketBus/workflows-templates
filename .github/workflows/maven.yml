name: Java CI with Maven

on:
  workflow_call:
    inputs:
      gitversion:
        type: string
        required: true
      jdk_version:
        type: string
        required: false
        default: 11
      integration_tests_disabled:
        type: boolean
        required: false
        default: true
      package_disabled:
        type: boolean
        required: false
        default: false
    secrets:
      maven_settings:
        required: true
      nexus_username:
        required: true
      nexus_password:
        required: true
      sonar_token:
        required: true

env:
  MAVEN_CLI_OPTS: "-B -e -fae -ntp -V"
  MAVEN_OPTS: "-Xmx1024m -Xms512m -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  NEXUS_USERNAME: ${{ secrets.nexus_username }}
  NEXUS_PASSWORD: ${{ secrets.nexus_password }}
  SONAR_HOST_URL: "https://sonar.clickbus.net"
  SONAR_TOKEN: ${{ secrets.sonar_token }}

jobs:
  code:
    name: code
    runs-on: live
    if: ${{ github.event_name == 'push' && github.ref_type == 'branch' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'maven'
          overwrite-settings: false

      - name: create settings.xml
        run: echo ${{ secrets.maven_settings }} | base64 -d > ~/.m2/settings.xml

      - name: bump version
        run: |
          MAJOR_MINOR_PATCH=$(echo ${{ inputs.gitversion }} | jq -r '.MajorMinorPatch')
          ./mvnw $MAVEN_CLI_OPTS org.codehaus.mojo:versions-maven-plugin:2.11.0:set -DnewVersion=${MAJOR_MINOR_PATCH}-SNAPSHOT
          ./mvnw $MAVEN_CLI_OPTS org.codehaus.mojo:versions-maven-plugin:2.11.0:set-property -Dproperty=revision -DnewVersion=${MAJOR_MINOR_PATCH}-SNAPSHOT
          ./mvnw $MAVEN_CLI_OPTS org.codehaus.mojo:versions-maven-plugin:2.11.0:commit
          git config user.email "github-actions@clickbus.com"
          git config user.name "Github Actions"
          git diff-index --quiet HEAD || git commit -a -m "[skip ci] bump version"
          git push

  lint:
    name: lint
    runs-on: live
    if: ${{ always() && (needs.code.result == 'success' || needs.code.result == 'skipped') && ((github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'branch')) }}
    needs:
      - code
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'maven'
          overwrite-settings: false

      - name: create settings.xml
        run: echo ${{ secrets.maven_settings }} | base64 -d > ~/.m2/settings.xml

      - name: lint code
        run: ./mvnw $MAVEN_CLI_OPTS clean checkstyle:check -Dcheckstyle.config.location=google_checks.xml

  unit_tests:
    name: unit tests
    runs-on: live
    if: ${{ always() && (needs.code.result == 'success' || needs.code.result == 'skipped') && ((github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'branch')) }}
    needs:
      - code
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'maven'
          overwrite-settings: false

      - name: create settings.xml
        run: echo ${{ secrets.maven_settings }} | base64 -d > ~/.m2/settings.xml

      - name: execute unit tests
        run: ./mvnw $MAVEN_CLI_OPTS clean test -DskipITs=true

      - name: archive unit tests report
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-report
          path: |
            **/target/surefire-reports/TEST-***.xml
            **/target/site/jacoco/jacoco.xml

  # integration_tests:
  #   name: integration tests
  #   runs-on: live
  #   if: ${{ always() && (needs.code.result == 'success' || needs.code.result == 'skipped') && ((github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'branch')) }}
  #   needs:
  #     - code
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: setup JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: ${{ inputs.jdk_version }}
  #         distribution: 'temurin'
  #         cache: 'maven'
  #         overwrite-settings: false

  #     - name: create settings.xml
  #       run: echo ${{ secrets.maven_settings }} | base64 -d > ~/.m2/settings.xml

  #     - name: execute integration tests
  #       run: ./mvnw $MAVEN_CLI_OPTS clean integration-test -DskipUTs

  sonarqube:
    name: sonarqube
    runs-on: live
    if: ${{ always() && (needs.code.result == 'success' || needs.code.result == 'skipped') && github.ref_name == github.event.repository.default_branch }}
    needs:
      - code
      - unit_tests
    steps:
      - name: download unit tests report
        uses: actions/download-artifact@v3
        with:
          name: unit-tests-report

      - name: sonarqube scan
        run: ./mvnw $MAVEN_CLI_OPTS verify sonar:sonar -Dmaven.test.skip

      - name: sonarqube quality gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5

  package:
    name: package
    runs-on: live
    if: ${{ always() && !inputs.package_disabled && (needs.code.result == 'success' || needs.code.result == 'skipped') && ((github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'branch') || (github.event_name == 'push' && github.ref_type == 'tag')) }}
    needs:
      - code
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'maven'
          overwrite-settings: false

      - name: create settings.xml
        run: echo ${{ secrets.maven_settings }} | base64 -d > ~/.m2/settings.xml

      - name: package artifact
        run: ./mvnw $MAVEN_CLI_OPTS clean package -Dmaven.test.skip=true 

      - name: archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-artifact
          path: |
            **/target/*.jar
            **/target/*.war