name: Helm CI

on:
  workflow_call:
    inputs:
      chart_path:
        type: string
        required: false
      app_version:
        type: string
        required: false
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

env:
  CHART_PATH: ${{ inputs.chart_path || format('charts/{0}', github.event.repository.name) }}

jobs:
  release:
    name: Release
    runs-on: 
      - self-hosted
      - live
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up .NET cli
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
        env:
          DOTNET_INSTALL_DIR: tools/dotnet

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ vars.HELM_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ vars.HELM_REGISTRY_REGION }}
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Dependency Update
        working-directory: ${{ env.CHART_PATH }}
        run: helm dep up

      - name: Lint
        working-directory: ${{ env.CHART_PATH }}
        run: helm lint --strict .

      - if: ${{ inputs.app_version }}
        name: Update App Version
        working-directory: ${{ env.CHART_PATH }}
        run: |
          export "APP_VERSION=${{ inputs.app_version }}"
          yq -i '.appVersion = env(APP_VERSION)' Chart.yaml

      - name: Update Helm Charts Version
        working-directory: ${{ env.CHART_PATH }}
        run: |
          export VERSION=${{ steps.gitversion.outputs.semVer }}
          yq -i '.version = env(VERSION)' Chart.yaml

      - if: ${{ github.ref_name == github.event.repository.default_branch }}
        name: Release
        working-directory: ${{ env.CHART_PATH }}
        run: |
          CHART_NAME=$(yq .name Chart.yaml)
          CHART_VERSION=$(yq .version Chart.yaml)

          helm package . -u

          helm push ${CHART_NAME}-${CHART_VERSION}.tgz oci://${{ steps.login_ecr.outputs.registry }}/helm-charts
          git config user.email "actions@clickbus.com"
          git config user.name "GitHub Actions"
          git add Chart.yaml
          git commit -m "chore: release helm charts $CHART_VERSION" || echo "nothing to commit, proceed"
          git push