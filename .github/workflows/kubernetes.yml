name: Kubernetes CD with Helm

on:
  workflow_call:
    inputs:
      image_tag:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

jobs:
  development:
    name: development
    runs-on: live
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || ((github.event_name == 'push' && github.ref_type == 'branch') && github.ref_name == github.event.repository.default_branch) }}
    environment: dev
    env:
      ENV: dev
      AWS_ACCOUNT_ID: 180811438061
      AWS_REGION: us-east-2
      EKS_CLUSTER: k8s-dev-85c52b0e
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job variables
        run: |
          echo RELEASE_NAME=${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
          echo NAMESPACE=${RELEASE_NAME} >> $GITHUB_ENV
          echo CHART_PATH=charts/${RELEASE_NAME} >> $GITHUB_ENV

      - name: configure AWS credentials for Helm
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Helm dependency update
        run: |
          aws ecr get-login-password | helm registry login \
            --username AWS \
            --password-stdin 203176318594.dkr.ecr.us-east-1.amazonaws.com

          helm dep up $CHART_PATH

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ steps.env.outputs.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: ${{ steps.env.outputs.aws_iam_role }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsBuildSession
          mask-aws-account-id: false

      - name: Helm upgrade
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER

          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            RELEASE_NAME=${RELEASE_NAME}-pr-${{ github.event.number }}
            PREFIX_HOST=pr-${{ github.event.number }}
            HELM_ARGS="--set ingress.preffixHost=${PREFIX_HOST}"
          fi

          if [[ -f ${CHART_PATH}/environments/${ENV}/secrets.yaml ]]; then
            HELM_ARGS="$HELM_ARGS --values secrets://${CHART_PATH}/environments/${ENV}/secrets.yaml"
          fi

          helm upgrade \
            --install $RELEASE_NAME $CHART_PATH \
            --create-namespace --namespace $NAMESPACE \
            --values ${CHART_PATH}/environments/${ENV}/values.yaml \
            --set image.tag=${{ inputs.image_tag }} $HELM_ARGS

  staging:
    name: staging
    runs-on: live
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    environment: stg
    env:
      ENV: stg
      AWS_ACCOUNT_ID: 406026015868
      AWS_REGION: us-east-2
      EKS_CLUSTER: k8s-stg-7a1d63f9
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job variables
        run: |
          echo RELEASE_NAME=${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
          echo NAMESPACE=${RELEASE_NAME} >> $GITHUB_ENV
          echo CHART_PATH=charts/${RELEASE_NAME} >> $GITHUB_ENV

      - name: configure AWS credentials for Helm
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Helm dependency update
        run: |
          aws ecr get-login-password | helm registry login \
            --username AWS \
            --password-stdin 203176318594.dkr.ecr.us-east-1.amazonaws.com

          helm dep up $CHART_PATH

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ steps.env.outputs.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: ${{ steps.env.outputs.aws_iam_role }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsBuildSession
          mask-aws-account-id: false

      - name: Helm upgrade
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER

          helm upgrade \
            --install $RELEASE_NAME $CHART_PATH \
            --create-namespace --namespace $NAMESPACE \
            --values ${CHART_PATH}/environments/${ENV}/values.yaml \
            --set image.tag=${{ inputs.image_tag }} $HELM_ARGS

  live:
    name: live
    runs-on: live
    if: ${{ github.event_name == 'workflow_dispatch' }}
    environment: live
    env:
      ENV: live
      AWS_ACCOUNT_ID: 114395709799
      AWS_REGION: us-east-2
      EKS_CLUSTER: k8s-live-620f830f
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job variables
        run: |
          echo RELEASE_NAME=${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
          echo NAMESPACE=${RELEASE_NAME} >> $GITHUB_ENV
          echo CHART_PATH=charts/${RELEASE_NAME} >> $GITHUB_ENV

      - name: configure AWS credentials for Helm
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Helm dependency update
        run: |
          aws ecr get-login-password | helm registry login \
            --username AWS \
            --password-stdin 203176318594.dkr.ecr.us-east-1.amazonaws.com

          helm dep up $CHART_PATH

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ steps.env.outputs.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: ${{ steps.env.outputs.aws_iam_role }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsBuildSession
          mask-aws-account-id: false

      - name: Helm upgrade
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER

          helm upgrade \
            --install $RELEASE_NAME $CHART_PATH \
            --create-namespace --namespace $NAMESPACE \
            --values ${CHART_PATH}/environments/${ENV}/values.yaml \
            --set image.tag=${{ inputs.image_tag }} $HELM_ARGS

  cleanup_pr:
    name: cleanup PR
    runs-on: live
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    env:
      ENV: dev
      AWS_ACCOUNT_ID: 180811438061
      AWS_REGION: us-east-2
      EKS_CLUSTER: k8s-dev-85c52b0e
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job variables
        run: |
          echo RELEASE_NAME=${GITHUB_REPOSITORY#*/} >> $GITHUB_ENV
          echo NAMESPACE=${RELEASE_NAME} >> $GITHUB_ENV
          echo CHART_PATH=charts/${RELEASE_NAME} >> $GITHUB_ENV

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ steps.env.outputs.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: ${{ steps.env.outputs.aws_iam_role }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsBuildSession
          mask-aws-account-id: false

      - name: Helm uninstall PR
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER

          RELEASE_NAME=${RELEASE_NAME}-pr-${{ github.event.number }}

          helm uninstall $RELEASE_NAME -n $NAMESPACE