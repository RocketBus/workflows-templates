name: Kubernetes CD with Helm

on:
  workflow_call:
    inputs:
      project_name:
        type: string
        required: true
      environment:
        type: string
        required: true
      image_tag:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_account_id:
        required: true
      aws_region:
        required: true
      eks_cluster_name:
        required: true

jobs:
  deploy:
    name: deploy
    runs-on: ${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job properties
        id: job_properties
        run: |
          echo RELEASE_NAME=${{ inputs.project_name }} >> $GITHUB_ENV
          echo NAMESPACE=${{ inputs.project_name }} >> $GITHUB_ENV
          echo CHART_PATH=charts/${{ inputs.project_name }} >> $GITHUB_ENV

      - name: configure AWS credentials for Helm
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Helm dependency update
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          aws ecr get-login-password | helm registry login \
            --username AWS \
            --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com

          helm dep up $CHART_PATH

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: "arn:aws:iam::${{ secrets.aws_account_id }}:role/CrossAccount-Global-Admin"
          role-duration-seconds: 1200
          role-session-name: GitHubActionsDeploySession
          mask-aws-account-id: false

      - name: update image tag
        run: |
          yq -i '.appVersion = env(APP_VERSION)' ${CHART_PATH}/Chart.yaml
          yq -i '.image.tag = env(APP_VERSION)' ${CHART_PATH}/environments/${{ inputs.environment }}/values.yaml

      - name: Helm upgrade
        run: |
          aws eks update-kubeconfig --name ${{ secrets.eks_cluster_name }}

          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            PREFIX=pr-${{ github.event.number }}
            RELEASE_NAME=${PREFIX}-${RELEASE_NAME}
            HELM_ARGS="--set ingress.prefixHost=${PREFIX}"
          fi

          if [[ -f ${CHART_PATH}/environments/${{ inputs.environment }}/secrets.yaml ]]; then
            HELM_ARGS="$HELM_ARGS --values secrets://${CHART_PATH}/environments/${{ inputs.environment }}/secrets.yaml"
          fi

          helm upgrade \
            --install $RELEASE_NAME $CHART_PATH \
            --create-namespace --namespace $NAMESPACE \
            --values ${CHART_PATH}/environments/${{ inputs.environment }}/values.yaml $HELM_ARGS

  cleanup:
    name: cleanup
    runs-on: ${{ inputs.environment }}
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set job properties
        id: job_properties
        run: |
          echo RELEASE_NAME=${{ inputs.project_name }} >> $GITHUB_ENV
          echo NAMESPACE=${{ inputs.project_name }} >> $GITHUB_ENV
          echo CHART_PATH=charts/${{ inputs.project_name }} >> $GITHUB_ENV

      - name: configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region }}
          role-skip-session-tagging: true
          role-to-assume: "arn:aws:iam::${{ secrets.aws_account_id }}:role/CrossAccount-Global-Admin"
          role-duration-seconds: 1200
          role-session-name: GitHubActionsDeploySession
          mask-aws-account-id: false

      - name: Helm uninstall PR
        run: |
          aws eks update-kubeconfig --name ${{ secrets.eks_cluster_name }}

          PREFIX=pr-${{ github.event.number }}
          RELEASE_NAME=${PREFIX}-${RELEASE_NAME}

          helm uninstall $RELEASE_NAME -n $NAMESPACE