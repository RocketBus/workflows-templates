name: Setup Workflow

on:
  workflow_call:
    outputs:
      project_name:
        value: ${{ jobs.set_project_properties.outputs.project_name }}
      gitversion:
        value: ${{ jobs.set_project_properties.outputs.gitversion }}

jobs:
  lint_commit:
    name: lint commit
    runs-on: live
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js

      - name: lint commit
        run: echo ${{ github.event.head_commit.message }} | commitlint

  set_project_properties:
    name: set project properties
    runs-on: live
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup .NET cli
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
        
      - name: setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          additionalArguments: >
            /overrideconfig mode=Mainline
            /overrideconfig major-version-bump-message="^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\\([\\w\\s-]*\\))?(!:|:.*\\n\\n((.+\\n)+\\n)?BREAKING CHANGE:\\s.+)"
            /overrideconfig minor-version-bump-message="^(feat)(\\([\\w\\s-]*\\))?:"
            /overrideconfig patch-version-bump-message="^(build|chore|ci|docs|fix|perf|refactor|revert|style|test)(\\([\\w\\s-]*\\))?:"

      - name: project settings
        id: project_settings
        run: |
          echo "::set-output name=project_name::${GITHUB_REPOSITORY#*/}"
          echo ${{ fromJson(steps.gitversion.outputs) }}
          echo "::set-output name=gitversion::${{ fromJson(steps.gitversion.outputs) }}"
    outputs:
      project_name: ${{ steps.project_settings.outputs.project_name }}
      gitversion: ${{ steps.project_settings.outputs.gitversion }}