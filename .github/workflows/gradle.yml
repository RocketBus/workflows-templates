name: Java CI with Gradle

on:
  workflow_call:
    inputs:
      jdk_version:
        type: string
        required: false
        default: 11
      skip_quality_gate_check:
        type: boolean
        required: false
        default: true
    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true
      sonar_token:
        required: true

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  NEXUS_USERNAME: ${{ secrets.nexus_username }}
  NEXUS_PASSWORD: ${{ secrets.nexus_password }}
  SONAR_HOST_URL: "https://sonar.clickbus.net"
  SONAR_TOKEN: ${{ secrets.sonar_token }}

jobs:
  job_properties:
    name: job properties
    runs-on: live
    outputs:
      namespace: ${{ steps.job_properties.outputs.namespace }}
      aws_region: ${{ steps.job_properties.outputs.aws_region }}
      aws_iam_role: ${{ steps.job_properties.outputs.aws_iam_role }}
    steps:
      - name: set job properties
        id: job_properties
        run: |
          declare -A AWS_ACCOUNTS_IDS AWS_REGIONS
          
          AWS_ACCOUNTS_IDS=([dev]=180811438061 [stg]=406026015868 [live]=114395709799)
          AWS_REGIONS=([dev]=us-east-2 [stg]=us-east-2 [live]=us-east-1)
          
          AWS_ACCOUNT_ID=${AWS_ACCOUNTS_IDS[$ENV]}
          AWS_REGION=${AWS_REGIONS[$ENV]}          
          NAMESPACE=$(ls charts)

          echo "namespace=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "aws_region=$AWS_REGION" >> $GITHUB_OUTPUT
          echo "aws_iam_role=arn:aws:iam::${AWS_ACCOUNT_ID}:role/CrossAccount-Global-Admin" >> $GITHUB_OUTPUT

  lint:
    name: lint
    runs-on: live
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'tag') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'gradle'
          overwrite-settings: false

      - name: lint code
        continue-on-error: true
        run: ./gradlew --no-daemon --parallel check -x test

  unit_tests:
    name: unit tests
    runs-on: ansible.v1.clickbus.net
    needs:
      - job_properties
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'tag') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'gradle'
          overwrite-settings: false

      - name: execute unit tests
        run: ./gradlew --no-daemon --parallel test jacocoTestReport

      - name: Create unit-tests-report.tar.gz
        run: |
          tar -czvf unit-tests-report.tar.gz **/build/reports/jacoco/jacocoTestReport

      - name: Archive Application Artifact
        uses: RocketBus/actions/.github/actions/utils/s3-artifact-upload@acme-3879
        with:
          name: unit-tests-report-${{needs.job_properties.outputs.namespace}}-${{ github.run_id }}.tar.gz
          paths: 'unit-tests-report.tar.gz'
          bucket_region: ${{needs.job_properties.outputs.aws_region}}
          bucket_name: ${{ needs.job_properties.outputs.namespace }}
          actions_iam_role: ${{ needs.job_properties.outputs.aws_iam_role }}

  integration_tests:
    name: integration tests
    runs-on: ansible.v1.clickbus.net
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'tag') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'gradle'
          overwrite-settings: false

      - name: execute integration tests
        continue-on-error: true
        run: ./gradlew --no-daemon --parallel integrationTest

  sonarqube:
    name: sonarqube
    runs-on: live
    needs:
      - lint
      - unit_tests
      - integration_tests
      - job_properties
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'tag') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'gradle'
          overwrite-settings: false

      - name: Download Application Artifact
        uses: RocketBus/actions/.github/actions/utils/s3-artifact-download@acme-3879
        with:
          name: unit-tests-report-${{needs.job_properties.outputs.namespace}}-${{ github.run_id }}.tar.gz
          bucket_region: ${{needs.job_properties.outputs.aws_region}}
          bucket_name: ${{ needs.job_properties.outputs.namespace }}
          actions_iam_role: ${{ needs.job_properties.outputs.aws_iam_role }}

      - name: sonarqube scan
        env:
          SONAR_PARAMETERS: ""
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            SONAR_PARAMETERS="$SONAR_PARAMETERS -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} -Dsonar.pullrequest.github.repository=$GITHUB_REPOSITORY"
          fi

          if [[ ${{ github.event_name }} == 'push' && ${{ github.ref_type }} == 'tag' ]]; then
            SONAR_PARAMETERS="$SONAR_PARAMETERS -Dsonar.branch.name=${{ github.event.repository.default_branch }}"
          fi

          ./gradlew --no-daemon --parallel sonar ${SONAR_PARAMETERS}

      - name: sonarqube quality gate check
        if: (github.event_name == 'pull_request') && (! inputs.skip_quality_gate_check)
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        with:
          scanMetadataReportFile: target/sonar/report-task.txt

  package:
    name: package
    runs-on: live
    needs:
      - lint
      - unit_tests
      - integration_tests
      - sonarqube
      - job_properties
    if: ${{ (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')) || (github.event_name == 'push' && github.ref_type == 'tag') }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_version }}
          distribution: 'temurin'
          cache: 'gradle'
          overwrite-settings: false

      - name: package artifact
        id: package_artifact
        run: ./gradlew --no-daemon --parallel build -x test

      - name: Create app-artifact.tar.gz
        run: |
          tar -czvf app-artifact.tar.gz **/build/libs/*.jar **/build/libs/*.war

      - name: Archive Application Artifact
        uses: RocketBus/actions/.github/actions/utils/s3-artifact-upload@acme-3879
        with:
          name: ${{ steps.job_properties.outputs.namespace }}-${{ github.run_id }}.tar.gz
          paths: 'app-artifact.tar.gz'
          bucket_region: ${{ steps.job_properties.outputs.aws_region }}
          bucket_name: ${{ steps.job_properties.outputs.namespace }}
          actions_iam_role: ${{ steps.job_properties.outputs.aws_iam_role }}

  release:
    name: release
    runs-on: live
    needs:
      - package
      - job_properties
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Download Application Artifact
        uses: RocketBus/actions/.github/actions/utils/s3-artifact-download@acme-3879
        with:
          name: ${{needs.job_properties.outputs.namespace}}-${{ github.run_id }}.tar.gz
          bucket_region: ${{needs.job_properties.outputs.aws_region}}
          bucket_name: ${{ needs.job_properties.outputs.namespace }}
          actions_iam_role: ${{ needs.job_properties.outputs.aws_iam_role }}

      - name: create github release
        uses: softprops/action-gh-release@v1
