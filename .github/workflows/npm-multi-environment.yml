name: Node.js Multi-Build

on:
  workflow_call:
    inputs:
      node_version:
        type: string
        required: false
        default: 18
      skip_quality_gate_check:
        type: boolean
        required: false
        default: false
      artifact_path:
        type: string
        required: false
        default: 'build/'
      dockerfile_path:
        type: string
        required: false
        default: Dockerfile
      docker_context:
        type: string
        required: false
        default: .
      docker_target:
        type: string
        required: false
      docker_build_args:
        type: string
        required: false
      image_name:
        type: string
        required: false
      scan_severity_cutoff:
        type: string
        required: false
        default: medium
      scan_fail_build:
        type: boolean
        required: false
        default: true
      chart_name:
        type: string
        required: false
      zapscan_target_url:
        type: string
        required: false
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      sonar_token:
        required: true

jobs:
  nodejs:
    name: Node.js
    uses: RocketBus/workflows-templates/.github/workflows/npm-ci.yml@v2
    with:
      node_version: ${{ inputs.node_version }}
      build_env: ${{ startsWith(github.ref_name, 'cabal') && 'cabal' || startsWith(github.ref_name, 'fallen') && 'fallen' || startsWith(github.ref_name, 'hive') && 'hive' || startsWith(github.ref_name, 'taken') && 'taken' || startsWith(github.ref_name, 'vex') && 'vex' || github.ref_name == github.event.repository.default_branch && 'stg' }}
      artifact_path: ${{ inputs.artifact_path }}
      skip_quality_gate_check: ${{ inputs.skip_quality_gate_check }}
    secrets: inherit
  docker:
    name: Docker
    uses: RocketBus/workflows-templates/.github/workflows/docker-ci.yml@v2
    needs:
      - nodejs
    with:
      artifact_name: app-artifact${{ startsWith(github.ref_name, 'cabal') && '-cabal' || startsWith(github.ref_name, 'fallen') && '-fallen' || startsWith(github.ref_name, 'hive') && '-hive' || startsWith(github.ref_name, 'taken') && '-taken' || startsWith(github.ref_name, 'vex') && '-vex' || github.ref_name == github.event.repository.default_branch && '-stg' }}
      dockerfile_path: ${{ inputs.dockerfile_path }}
      docker_context: ${{ inputs.docker_context }}
      docker_target: ${{ inputs.docker_target }}
      docker_build_args: ${{ inputs.docker_build_args }}
      image_tag_suffix: ${{ github.ref_name == github.event.repository.default_branch && '-stg' }}
      image_name: ${{ inputs.image_name }}
      scan_severity_cutoff: ${{ inputs.scan_severity_cutoff }}
      scan_fail_build: ${{ inputs.scan_fail_build }}
    secrets: inherit
  helm:
    name: Helm
    uses: RocketBus/workflows-templates/.github/workflows/helm-ci.yml@v2
    needs:
      - docker
    with:
      chart_name: ${{ inputs.chart_name }}
      chart_version_suffix: ${{ github.ref_name == github.event.repository.default_branch && '-stg' }}
      app_version: ${{ needs.docker.outputs.image_tag }}
    secrets: inherit
  development:
    if: ${{ startsWith(github.ref_name, 'cabal') || startsWith(github.ref_name, 'fallen') || startsWith(github.ref_name, 'hive') || startsWith(github.ref_name, 'taken') || startsWith(github.ref_name, 'vex') }}
    name: Development
    uses: RocketBus/workflows-templates/.github/workflows/helm-deploy.yml@v2
    needs:
      - helm
    with:
      chart_name: ${{ needs.helm.outputs.chart_name }}
      chart_version: ${{ needs.helm.outputs.chart_version }}
      environment: ${{ startsWith(github.ref_name, 'cabal') && 'cabal' || startsWith(github.ref_name, 'fallen') && 'fallen' || startsWith(github.ref_name, 'hive') && 'hive' || startsWith(github.ref_name, 'taken') && 'taken' || startsWith(github.ref_name, 'vex') && 'vex' }}
    secrets: inherit
  staging:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    name: Staging
    uses: RocketBus/workflows-templates/.github/workflows/helm-deploy.yml@v2
    needs:
      - helm
    with:
      chart_name: ${{ needs.helm.outputs.chart_name }}
      chart_version: ${{ needs.helm.outputs.chart_version }}
      environment: stg
    secrets: inherit
  zaproxy:
    if: ${{ inputs.zapscan_target_url }}
    name: ZAP Scan
    needs:
      - staging
    runs-on:
      - self-hosted
      - live
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.5.1
        with:
          target: ${{ inputs.zapscan_target_url }}
  nodejs-live:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    name: Node.js
    uses: RocketBus/workflows-templates/.github/workflows/npm-ci.yml@v2
    with:
      node_version: ${{ inputs.node_version }}
      artifact_path: ${{ inputs.artifact_path }}
      skip_quality_gate_check: ${{ inputs.skip_quality_gate_check }}
      skip_tests: true
      skip_release: true
    secrets: inherit
  docker-live:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    name: Docker
    uses: RocketBus/workflows-templates/.github/workflows/docker-ci.yml@v2
    needs:
      - nodejs-live
    with:
      artifact_name: ${{ needs.nodejs-live.outputs.artifact_name }}
      dockerfile_path: ${{ inputs.dockerfile_path }}
      docker_context: ${{ inputs.docker_context }}
      docker_target: ${{ inputs.docker_target }}
      docker_build_args: ${{ inputs.docker_build_args }}
      image_name: ${{ inputs.image_name }}
      scan_severity_cutoff: ${{ inputs.scan_severity_cutoff }}
      scan_fail_build: ${{ inputs.scan_fail_build }}
    secrets: inherit
  helm-live:
    if: ${{ github.ref_name == github.event.repository.default_branch }}
    name: Helm
    uses: RocketBus/workflows-templates/.github/workflows/helm-ci.yml@v2
    needs:
      - docker-live
    with:
      chart_name: ${{ inputs.chart_name }}
      app_version: ${{ needs.docker-live.outputs.image_tag }}
    secrets: inherit